/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.12 public/models/v3.glb
*/

import React, { useEffect, useRef } from 'react'
import { OrbitControls, useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import * as THREE from 'three'

export default function L_3(props) {
  const { nodes, materials } = useGLTF('./models/macbook-pro.17874f90.glb')
  let groupRef = useRef(null)

  // useFrame(() => {
  //   if (groupRef?.current) {
  //     groupRef.current.rotation.y = groupRef.current.rotation.y - 0.025
  //     // const boundingBox = new THREE.Box3().setFromObject(groupRef.current)
  //     // console.log(boundingBox)
  //   }
  // })

  useEffect(() => {
    console.log(nodes)
    console.log(materials)
  }, [])

  const renderMeshes = Object.entries(nodes).map(([key, value]) => {
    if (key !== 'Screen' && key !== 'Logo') {
      return (
        <mesh
          key={key}
          castShadow
          // receiveShadow
          geometry={nodes[key].geometry}
          material={nodes[key].material}
          position={[
            nodes[key].position.x,
            key !== 'Screen' ? nodes[key].position.y : 0,
            nodes[key].position.z,
          ]}
        >
          <meshStandardMaterial
            // color="#808080"
            color="#c8c8c8"
            // color="#000"
            roughness={0.5}
            // wireframe
            // castShadow
          />
        </mesh>
      )
    }
    return null
  })

  return (
    <primitive
      position={[0, -0.2, 0]}
      object={nodes['Scene']}
      scale={0.5}
      rotation-y={-0.35}
      rotation-x={0.05}
    >
      {props.children}
    </primitive>
  )
}

useGLTF.preload('./models/macbook-pro.17874f90.glb')

// <group
//       {...props}
//       dispose={null}
//       ref={groupRef}
//     >
//       {renderMeshes}
//       {/* <mesh
//         castShadow
//         // receiveShadow
//         geometry={nodes['Frame'].geometry}
//         // material={nodes['outer-spiral'].material}
//         rotation={[0, 0, 0]}
//       >
//         <meshStandardMaterial
//           // color="#808080"
//           color="#555555"
//           // color="#000"
//           // roughness={0.1}
//           // wireframe
//           // castShadow
//         />
//       </mesh>
//       <mesh
//         castShadow
//         // receiveShadow
//         geometry={nodes['Keyboard'].geometry}
//         // material={nodes['outer-spiral'].material}
//         rotation={[0, 0, 0]}
//       >
//         <meshStandardMaterial
//           // color="#808080"
//           color="#555555"
//           // color="#000"
//           // roughness={0.1}
//           // wireframe
//           // castShadow
//         />
//       </mesh> */}
//     </group>
